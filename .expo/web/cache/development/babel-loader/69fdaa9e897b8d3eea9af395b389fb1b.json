{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { autService } from \"../services/authService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      authData = _useState2[0],\n      setAuth = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    loadFromStorage();\n  }, []);\n\n  function loadFromStorage() {\n    var auth;\n    return _regeneratorRuntime.async(function loadFromStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@AuthData'));\n\n          case 2:\n            auth = _context.sent;\n            auth && setAuth(JSON.parse(auth));\n            setLoading(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function signIn(email, password) {\n    var auth;\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(autService.signIn(email, password));\n\n          case 3:\n            auth = _context2.sent;\n            setAuth(auth);\n            AsyncStorage.setItem('@AuthData', JSON.stringify(auth));\n            return _context2.abrupt(\"return\", auth);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            Alert.alert(_context2.t0.message, 'tente novamente!');\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setAuth(undefined);\n            AsyncStorage.removeItem('@AuthData');\n            return _context3.abrupt(\"return\");\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      authData: authData,\n      loading: loading,\n      signIn: signIn,\n      signOut: signOut\n    },\n    children: children\n  });\n};\nexport function useAuth() {\n  var context = useContext(AuthContext);\n  return context;\n}","map":{"version":3,"sources":["C:/projetos/apps/login/src/contexts/Auth.tsx"],"names":["React","createContext","useContext","useEffect","useState","AsyncStorage","autService","AuthContext","AuthProvider","children","authData","setAuth","loading","setLoading","loadFromStorage","getItem","auth","JSON","parse","signIn","email","password","setItem","stringify","Alert","alert","message","signOut","undefined","removeItem","useAuth","context"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,SAASC,UAAT;;AAmBA,OAAO,IAAMC,WAAW,GAAGN,aAAa,CAAkB,EAAlB,CAAjC;AAEP,OAAO,IAAMO,YAAsB,GAAG,SAAzBA,YAAyB,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAClD,kBAA4BL,QAAQ,EAApC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,OAAjB;;AACA,mBAA8BP,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,UAAhB;;AAEAV,EAAAA,SAAS,CAAC,YAAI;AACVW,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAAeA,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACuBT,YAAY,CAACU,OAAb,CAAqB,WAArB,CADvB;;AAAA;AACUC,YAAAA,IADV;AAEIA,YAAAA,IAAI,IAAIL,OAAO,CAACM,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAf;AACAH,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,WAAeM,MAAf,CAAsBC,KAAtB,EAAqCC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAE2Bf,UAAU,CAACa,MAAX,CAAkBC,KAAlB,EAAyBC,QAAzB,CAF3B;;AAAA;AAEcL,YAAAA,IAFd;AAGQL,YAAAA,OAAO,CAACK,IAAD,CAAP;AACAX,YAAAA,YAAY,CAACiB,OAAb,CAAqB,WAArB,EAAkCL,IAAI,CAACM,SAAL,CAAeP,IAAf,CAAlC;AAJR,8CAMeA,IANf;;AAAA;AAAA;AAAA;AASQQ,YAAAA,KAAK,CAACC,KAAN,CAAY,aAAMC,OAAlB,EAA2B,kBAA3B;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,WAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AACIhB,YAAAA,OAAO,CAACiB,SAAD,CAAP;AACAvB,YAAAA,YAAY,CAACwB,UAAb,CAAwB,WAAxB;AAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SACI,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACnB,MAAAA,QAAQ,EAARA,QAAD;AAAWE,MAAAA,OAAO,EAAPA,OAAX;AAAoBO,MAAAA,MAAM,EAANA,MAApB;AAA6BQ,MAAAA,OAAO,EAAPA;AAA7B,KAA7B;AAAA,cACKlB;AADL,IADJ;AAKH,CAtCM;AAwCP,OAAO,SAASqB,OAAT,GAAkB;AACrB,MAAMC,OAAO,GAAG7B,UAAU,CAACK,WAAD,CAA1B;AACA,SAAOwB,OAAP;AACH","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Alert } from \"react-native\";\r\nimport { autService } from \"../services/authService\";\r\n\r\nexport interface AuthData{\r\n    token: string\r\n    email: string\r\n    name: string\r\n}\r\ninterface AuthContextData {\r\n    authData?: AuthData\r\n    signIn: (email: string, password: string)=> Promise<AuthData>\r\n    signOut: () => Promise<void>\r\n    loading: boolean\r\n    any?: any\r\n}\r\nexport interface post{\r\n    titulo: string\r\n    mensagem: string\r\n  }\r\n\r\nexport const AuthContext = createContext<AuthContextData>({} as AuthContextData)\r\n\r\nexport const AuthProvider: React.FC = ({children}) => {\r\n    const [authData, setAuth] = useState<AuthData>();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        loadFromStorage()\r\n    }, [])\r\n\r\n    async function loadFromStorage(){\r\n        const auth = await AsyncStorage.getItem('@AuthData')\r\n        auth && setAuth(JSON.parse(auth) as AuthData)\r\n        setLoading(false)\r\n    }\r\n\r\n    async function signIn(email: string, password: string): Promise<AuthData>{\r\n        try {\r\n            const auth = await autService.signIn(email, password)\r\n            setAuth(auth)\r\n            AsyncStorage.setItem('@AuthData', JSON.stringify(auth))\r\n\r\n            return auth\r\n            \r\n        } catch (error) {\r\n            Alert.alert(error.message, 'tente novamente!')\r\n        }\r\n    }\r\n    async function signOut(): Promise<void>{\r\n        setAuth(undefined)\r\n        AsyncStorage.removeItem('@AuthData')\r\n\r\n        return\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{authData, loading, signIn,  signOut}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useAuth(){\r\n    const context = useContext(AuthContext)\r\n    return context\r\n}\r\n"]},"metadata":{},"sourceType":"module"}